apiVersion: v1
kind: Namespace
metadata:
  name: nodeapp

---
apiVersion: v1
kind: Secret
metadata:
  name: mongo-secret
  namespace: nodeapp
type: Opaque
stringData:
  MONGO_USER: ${MONGO_INITDB_ROOT_USER}
  MONGO_PASS: ${MONGO_INITDB_ROOT_PASS}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodeapp-deployment
  namespace: nodeapp
  labels:
    app: nodeapp
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nodeapp
  template:
    metadata:
      labels:
        app: nodeapp
    spec:
      containers:
      - name: nodeapp
        image: ${REPO_URL}/nodeapp:${IMAGE_TAG}
        ports:
        - containerPort: 3000
        env:
        - name: MONGO_HOSTS
          value: '${MONGO_HOSTS}'
        - name: MONGO_USER
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: MONGO_USER
        - name: MONGO_PASS
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: MONGO_PASS

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: nodeapp-hpa
  namespace: nodeapp
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nodeapp-deployment
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70

---
apiVersion: v1
kind: Service
metadata:
  name: nodeapp-service
  namespace: nodeapp
spec:
  selector:
    app: nodeapp
  ports:
  - protocol: TCP
    port: 3000
    targetPort: 3000
  type: ClusterIP